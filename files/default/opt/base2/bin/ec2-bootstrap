#!/bin/bash

INSTANCE_ID=`curl http://169.254.169.254/2014-11-05/meta-data/instance-id -s`


if [ "x$1" == x ]; then
  AWS_REGION="ap-southeast-2"
else
  AWS_REGION="$1"
fi

if [ ! "x$2" == x ]; then
  AWS_ACCOUNT_ID="$2"
fi

function get_tag {
    tag="`aws ec2 describe-tags --region ${AWS_REGION} --filters "Name=resource-id,Values=$INSTANCE_ID" "Name=key,Values=$1" --output=text | cut -f5`"
    echo "$tag"
}

export EC2_TAG_ENVIRONMENT="`get_tag 'Environment'`"
export EC2_TAG_ENVIRONMENT_TYPE="`get_tag 'EnvironmentType'`"
export EC2_TAG_ROLE="`get_tag 'Role'`"
export EC2_TAG_NAME="`get_tag 'Name'`"
export EC2_AZ="`curl http://169.254.169.254/2014-11-05/meta-data/placement/availability-zone -s | rev | cut -c1`"
export AWS_REGION=$AWS_REGION
export DATA_VOLUME_ID=$DATA_VOLUME_ID
export INSTANCE_ID=$INSTANCE_ID
export AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID
export EC2_TAG_SSM_PARAMETERS="`get_tag` 'SSMParameters'"

#create an environment in a dynamic way
#if they don't exist
#some cookbooks expect a chef env
CHEF_ENV_DIR=/etc/chef/environments
[[ -d $CHEF_ENV_DIR ]] || mkdir -p $CHEF_ENV_DIR
[[ -f $CHEF_ENV_DIR/$EC2_TAG_ENVIRONMENT.json ]] || echo "{\"name\":\"$EC2_TAG_ENVIRONMENT\",\"chef_type\":\"environment\"}" > $CHEF_ENV_DIR/$EC2_TAG_ENVIRONMENT.json

if [ -f /etc/profile.d/bootstrap_env.sh ]; then
  source /etc/profile.d/bootstrap_env.sh
fi

cat <<EOT > /etc/chef/override.json
{
  "base2": {
    "aws_account_id":"$AWS_ACCOUNT_ID",
    "role": "$EC2_TAG_ROLE",
    "region": "$AWS_REGION",
    "az": "$EC2_AZ",
    "build_no": "${APP_BUILD_NO}",
    "build_sha": "${APP_BUILD_SHA}",
    "environment": {
      "name": "$EC2_TAG_ENVIRONMENT",
      "type": "$EC2_TAG_ENVIRONMENT_TYPE"
    },
    "ec2": {
      "instance-id": "$INSTANCE_ID",
      "name": "$EC2_TAG_NAME"
    }
  }
}
EOT

if [[ $EC2_TAG_SSM_PARAMETERS -eq "true" ]]; then
  echo "Executing get_ssm_parameters for environment $EC2_TAG_ENVIRONMENT"
  ruby /opt/base2/bin/get_ssm_parameters -r $AWS_REGION -e $EC2_TAG_ENVIRONMENT
fi

echo "Executing bootstrap for $EC2_TAG_ROLE for environment $EC2_TAG_ENVIRONMENT"

CLI_OPTS=""
if [[ -f "/etc/chef/environments/${EC2_TAG_ENVIRONMENT_TYPE}.json" ]]; then
  CLI_OPTS="-E ${EC2_TAG_ENVIRONMENT_TYPE}"
fi

if [[ -f "/etc/chef/environments/${EC2_TAG_ENVIRONMENT}.json" ]]; then
  CLI_OPTS="-E ${EC2_TAG_ENVIRONMENT}"
fi

cd /etc/chef
/opt/chef/bin/chef-client --local-mode $CLI_OPTS -j /etc/chef/override.json -o "recipe[$EC2_TAG_ROLE]" --log_level info
